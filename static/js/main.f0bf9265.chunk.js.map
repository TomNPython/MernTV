{"version":3,"sources":["components/navbar.component.js","components/series-list.component.js","components/edit-series.component.js","components/create-series.component.js","components/create-user.component.js","components/show-series.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Series","props","series","_id","username","title","description","substring","length","style","color","fontWeight","stars","date","split","href","onClick","deleteSeries","SeriesList","bind","state","axios","get","then","res","setState","data","catch","err","console","log","id","delete","this","filter","el","map","currentSeries","key","seriesList","EditSeries","onChangeUsername","onChangeTitle","onChangeDescription","onChangeStars","onChangeDate","onSubmit","Date","users","match","params","user","e","target","value","preventDefault","post","window","location","ref","onChange","type","required","rows","selected","CreateSeries","CreateUser","newUser","success","errors","ShowSeries","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0bf9265.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n        <Link to=\"/\" className=\"navbar-brand\">Series Tracker</Link>\r\n        <div className=\"collpase navbar-collapse\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/\" className=\"nav-link\">TV Series</Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/create\" className=\"nav-link\">Create Series Entry</Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/user\" className=\"nav-link\">Create User</Link>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nconst Series = props => (\r\n  \r\n  <tr>\r\n    <td>\r\n      <Link to={'/series/'+props.series._id} \r\n      username={props.series.username}>{props.series.username}</Link></td>\r\n    <td>{props.series.title}</td>\r\n    <td>{props.series.description.substring(0,50)}{props.series.description.length > 50 ? '...' : ''}</td>\r\n    <td style={{color:'rgb(182, 132, 56)', fontWeight:'bold'}}>{props.series.stars}</td>\r\n    <td>{props.series.date.split('T')[0]}</td>\r\n    <td>\r\n      <Link to={'/edit/'+props.series._id}>edit</Link> | <a href=\"#\" \r\n      onClick={() => {props.deleteSeries(props.series._id)}}>delete</a>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nexport default class SeriesList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.deleteSeries = this.deleteSeries.bind(this)\r\n\r\n    this.state = {\r\n      series: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:3000/series')\r\n      .then(res => {\r\n        this.setState({\r\n          series: res.data\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  deleteSeries(id) {\r\n    axios.delete('http://localhost:3000/series/'+id)\r\n        .then(res => console.log(res.data))\r\n        .catch(err => console.log(err))\r\n\r\n    this.setState({\r\n      series: this.state.series.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n  seriesList() {\r\n    return this.state.series.map(currentSeries => {\r\n      return <Series series={currentSeries} deleteSeries={this.deleteSeries}\r\n                key={currentSeries.id} />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Series Entries:</h3>\r\n        <table className=\"table table-striped table-bordered\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Stars</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.seriesList()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditSeries extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeStars = this.onChangeStars.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: '',\r\n      title: '',\r\n      description: '',\r\n      stars: 0,\r\n      date: new Date(),\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:3000/series/'+this.props.match.params.id)\r\n        .then(res => {\r\n          this.setState({\r\n            username: res.data.username,\r\n            title: res.data.title,\r\n            description: res.data.description,\r\n            stars: res.data.stars,\r\n            date: new Date(res.data.date),\r\n          }\r\n          )\r\n          console.log(this.state.title)\r\n          console.log(this.state.stars)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    \r\n    axios.get('http://localhost:3000/users')\r\n          .then(res => {\r\n            this.setState({\r\n              users: res.data.map(user => user.username)\r\n            })\r\n          })\r\n          .catch(err => console.log(err))\r\n  };\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStars(e) {\r\n    this.setState({\r\n      stars: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    });\r\n  }\r\n\r\nonSubmit(e) {\r\n  e.preventDefault() \r\n\r\n  const series = {\r\n    username: this.state.username,\r\n    title: this.state.title, \r\n    description: this.state.description,\r\n    stars: this.state.stars,\r\n    date: this.state.date\r\n  }\r\n\r\n  console.log(series)\r\n\r\n  axios.post('http://localhost:3000/series/update/'+this.props.match.params.id, series)\r\n        .then(res => console.log(res.data))\r\n\r\n  window.location = '/'\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         <h3>Edit Series Entry</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\"> \r\n            <label>Username: </label>\r\n            <select ref=\"userInput\"\r\n                className=\"form-control\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}>\r\n                {\r\n                  this.state.users.map(function(user) {\r\n                    return <option \r\n                      key={user}\r\n                      value={user}>{user}\r\n                      </option>;\r\n                  })\r\n                }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\"> \r\n            <label>Title: </label>\r\n            <input  type=\"text\"\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.title}\r\n                onChange={this.onChangeTitle}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\"> \r\n            <label>Description: </label>\r\n            <textarea  rows=\"5\"\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Stars: </label>\r\n            <select className='form-control' value={this.state.stars} \r\n            onChange={this.onChangeStars}>\r\n              <option value=\"0\">0</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Date: </label>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value=\"Edit Series Entry\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios'\r\n\r\nexport default class CreateSeries extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '', \r\n      title: '', \r\n      description: '',\r\n      stars: 0,\r\n      date: new Date(),\r\n      users: []\r\n    };\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeStars = this.onChangeStars.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:3000/users')\r\n        .then(res => {\r\n          if (res.data.length > 0) {\r\n              this.setState({\r\n                users: res.data.map(user => user.username),\r\n                username: res.data[0].username\r\n              })\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStars(e) {\r\n    this.setState({\r\n      stars: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const series = {\r\n      username: this.state.username,\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      stars: this.state.stars,\r\n      date: this.state.date\r\n    };\r\n\r\n    console.log(series)\r\n\r\n    axios.post('http://localhost:3000/series/add', series)\r\n        .then(res => console.log(res.data))\r\n\r\n    window.location = '/'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Create New Series Entry</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Username:</label>\r\n            <select ref='userInput' required \r\n            className='form-control'\r\n            value={this.state.username}\r\n            onChange={this.onChangeUsername}>\r\n              {this.state.users.map(function(user) {\r\n                return <option \r\n                          key={user} \r\n                          value={user}>\r\n                            {user}\r\n                        </option>\r\n                      })\r\n                    }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Title:</label>\r\n            <input type=\"text\" \r\n            className='form-control'\r\n            value={this.state.title}\r\n            onChange={this.onChangeTitle}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <textarea rows='5'\r\n            className='form-control'\r\n            value={this.state.description}\r\n            onChange={this.onChangeDescription}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Stars:</label>\r\n            <select className='form-control' onChange={this.onChangeStars}>\r\n              <option value=\"0\">0</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Date:</label>\r\n            <DatePicker \r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate} \r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value='Create Series Entry' className='btn btn-primary' />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateUser extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n\r\n\r\n    const newUser = {\r\n      username: this.state.username\r\n    };\r\n\r\n    console.log(newUser);\r\n\r\n    axios.post('http://localhost:3000/users/add', newUser)\r\n            .then(res => {\r\n              console.log(res.data)\r\n              this.setState({\r\n                success: 'User Created!',\r\n                errors: ''\r\n              })\r\n            })\r\n            .catch(err => {\r\n              console.log(err)\r\n              this.setState({\r\n                errors: 'Username must be unique & at least 3 characters long.',\r\n                success: ''\r\n              })\r\n            })\r\n\r\n    this.setState({\r\n      username: ''\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Create New User</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Username:</label>\r\n            <input type=\"text\" required\r\n            className='form-control'\r\n            value={this.state.username}\r\n            onChange={this.onChangeUsername}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value='Create User' className='btn btn-primary'/>\r\n          </div>\r\n        </form>\r\n        <p className='badge badge-danger'>{this.state.errors}</p>\r\n        <p className='badge badge-success'>{this.state.success}</p>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nexport default class ShowSeries extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n\r\n            this.state = {\r\n                username: ''\r\n            }\r\n            console.log(this.state.username)\r\n        }\r\n\r\n        componentDidMount() {\r\n            axios.get('http://localhost:3000/series/'+this.props.match.params.id)\r\n                .then(res => {\r\n                  this.setState({\r\n                    username: res.data.username,\r\n                    title: res.data.title,\r\n                    description: res.data.description,\r\n                    stars: res.data.stars,\r\n                    date: new Date(res.data.date),\r\n                  }\r\n                  )\r\n                  \r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n\r\n  \r\n  render() {\r\n      return (\r\n          <div className='series-review'>\r\n            <label>Review Left By:</label>\r\n            <h4>{this.state.username}</h4>\r\n            <label>Title:</label>\r\n            <h4>{this.state.title}</h4>\r\n            <label>Description:</label>\r\n            <h4>{this.state.description}</h4>\r\n            <label>Star Rating:</label>\r\n            <h4>{this.state.stars} stars</h4>\r\n          </div>\r\n      )}\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Navbar from \"./components/navbar.component\"\nimport SeriesList from \"./components/series-list.component\";\nimport EditSeries from \"./components/edit-series.component\";\nimport CreateSeries from \"./components/create-series.component\";\nimport CreateUser from \"./components/create-user.component\";\nimport ShowSeries from \"./components/show-series.component\"\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <br/>\n      <Route path=\"/\" exact component={SeriesList} />\n      <Route path=\"/edit/:id\" component={EditSeries} />\n      <Route path=\"/create\" component={CreateSeries} />\n      <Route path=\"/user\" component={CreateUser} />\n      <Route path='/series/:id' component={ShowSeries} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}